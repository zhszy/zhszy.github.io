[{"title":"iOS自动化打包","date":"2015-04-12T06:25:27.000Z","path":"2015/04/12/packaging/","text":"需要工具 Xcode SourceTree 打包分为两种情况，STG环境，PRD环境，可以根据项目进项相关配置 PS：打包时需要保证SourceTree无可提交代码并拉取最新代码。 1.使用终端进入SourceTree对应的项目文件（.xcodeproj所在的目录文件）； 2.输入如下命令： xcodebuild -workspace [POD_NAME].xcworkspace -scheme [POD_NAME] -configuration Release ps:[POD_NAME]为项目名称 如果打包成功了如下图所示： 3.复制下图中蓝色选中区域的路径： 4.执行如下命令： xcrun -sdk iphoneos -v PackageApplication 刚才复制的蓝色选中的路径 -o ~/Desktop/[POD_NAME].ipa ps:命令成功后会在桌面生成.ipa包 5.删除多余的ipa文件： 执行如下命令： rm -rf 蓝色选中的路径","tags":[]},{"title":"常用链接","date":"2014-12-08T06:25:27.000Z","path":"2014/12/08/dataLinking/","text":"常用资料链接 https://www.coding.net/ &emsp;&emsp;&emsp;&emsp; 码市-技术网站 http://techblog.toutiao.com /&emsp;&emsp; 今日头条技术博客 http://www.desgard.com/ &emsp;&emsp;&emsp; 技术博客 http://www.jianshu.com &emsp;&emsp;&emsp;&emsp; 简书 http://tmq.qq.com &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 技术博客 https://gold.xitu.io/&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&amp;emsp; 掘金-技术社区 https://github.com &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; github http://www.cocoachina.com / &emsp; cocoachina-技术社区 https://cocoapods.org/ &emsp;&emsp;&emsp;&emsp;&emsp; cocoapod官网 https://git.oschina.net/ &emsp;&emsp;&emsp;&emsp;&emsp; 码云 http://www.csdn.net/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp; CSDN-技术论坛 https://www.cnblogs.com/ &emsp;&emsp;&emsp; 博客园-技术社区 http://www.code4app.com/ &emsp;&emsp; Code4App http://www.oschina.net &emsp;&emsp;&emsp;&emsp; 开源中国 https://www.yinxiang.com/ &emsp;&emsp; 印象笔记 https://fir.im/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; fir https://shimo.im/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 石墨 http://stackoverflow.com/ &emsp;&emsp;&emsp; 技术网站 http://www.runoob.com/ &emsp;&emsp;&emsp; 技术网站 http://blog.sina.com.cn &emsp;&emsp;&emsp;&emsp; 新浪博客 http://jspatch.com/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp; jspatch http://mp.weixin.qq.com &emsp;&emsp;&emsp; 微信公众平台","tags":[]},{"title":"Private Pods","date":"2014-07-20T06:25:27.000Z","path":"2014/07/20/cocoapods/","text":"Cocoapods是非常好用的一个iOS依赖管理工具，使用它可以方便的管理和更新项目中所使用到的第三方库，以及将自己的项目中的公共组件交由它去管理。 1.创建并设置一个私有的Spec Repo。 创建完成之后在Terminal中执行如下命令: # pod repo add [REPO_NAME] [SOURCE_URL] PS：REPO_NAME为repo名称， 如果有其他合作人员共同使用这个私有Spec Repo的话在他有对应Git仓库的权限的前提下执行相同的命令添加这个Spec Repo即可。 如果删除在Terminal中执行如下命令: # pod repo remove [REPO_NAME] 2.创建Pod的所需要的项目工程文件。 $ pod lib create [POD_NAME] When you’re asked what language you want to use, answer Swift. When asked if you’d like to include a demo application, answer Yes. When determining whether to create a sample project or not, the CocoaPods team suggests asking yourself “Should this Pod include a screenshot?” If so, then it’s a good idea to include a sample project. When asked which testing framework to use, answer None. Answer No to the prompt regarding view based testing.。 3.编辑对应的podspec文件。 编辑完podspec文件后，需要验证一下这个文件是否可用，如果有任何WARNING或者ERROR都是不可以的，它就不能被添加到Spec Repo中，不过xcode的WARNING是可以存在的，验证需要执行一下命令 创建完成之后在Terminal中执行如下命令: $ pod lib lint 当出现: -&gt; [POD_NAME] (version) PodTestLibrary passed validation. ps:POD_NAME为项目工程名 时，说明验证通过了。 4.向私有的Spec Repo中提交podspec。 更新创建版本: git tag &apos;1.0.0&apos; git push --tags PS：当前的版本号必须和.podspec文件中的版本匹配 提交podspec pod repo push [REPO_NAME] [POD_NAME].podspec 5.更新维护podspec。 更新提交新版本重复实现步骤3和步骤4。","tags":[]}]