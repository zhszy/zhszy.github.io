[{"title":"iOS常用tip","date":"2015-07-16T10:25:27.000Z","path":"2015/07/16/stories/","text":"1.多事件同时响应 当界面上有多个继承于UIControl的视图，同时触发，对应的事件也会同时触发，为避免此类问题，在iOS7.0系统中，需将每个继承于UIControl视图的exclusiveTouch属性设置为YES，在iOS8以上的系统，可全局设置[[UIControl appearance] setExclusiveTouch:YES]; 若视图中是多个手势，该方法不适用 2.生成ssh密钥 生成新的ssh秘钥 $ ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱” 查看生成的秘钥 cat ~/.ssh/id_rsa.pub 检查SSH keys是否存在 ls -al ~/.ssh 3.URL转义 在使用+URLWithString:或-initWithString:来创建一个URL对象时，提供的参数字符串必须符合RFC 2396标准Uniform Resource Identifiers (URI): Generic Syntax。而这两个方法又是根据RFC 1738 Uniform Resource Locators (URL)和1808 Relative Uniform Resource Locators两个标准来解析字符串的。可以参考一下阮大侠的URL编码。 我们所需要做的就是对不符合标准的字符串进行转义操作。NSString类提供了两个方法来做这种转义操作，一个是-stringByAddingPercentEscapesUsingEncoding:，不过这个方法在iOS 9.0已被废弃；现在更提倡的是用-stringByAddingPercentEncodingWithAllowedCharacters:方法，这个方法是iOS 7.0后添加的。 4.UIImageView显示gif图片有两种方式 UIImageView显示gif图片有两种方式。当然前提都是先将gif中的每一帧取出来放到一个个UIImage对象中，将这些对象放到一个数组中，如下代码所示。 1234567891011CGImageSourceRef source = CGImageSourceCreateWithData((__bridge CFDataRef)data, NULL);size_t count = CGImageSourceGetCount(source); NSMutableArray *images = [NSMutableArray array];for (size_t i = 0; i &lt; count; i++) &#123; CGImageRef image = CGImageSourceCreateImageAtIndex(source, i, NULL); [images addObject:[UIImage imageWithCGImage:image scale:[UIScreen mainScreen] orientation:UIImageOrientationUp]]; CGImageRelease(image);&#125; CFRelease(source) 一种方式是将这些UIImage对象通过UIImage的类方法+animatedImageWithImages:duration:组合成一个UIImage对象，然后赋值给UIImageView对象的image属性。 第二种方式是将UIImage对象的数组赋值给UIImageView对象的animationImages属性，然后调用UIImageView对象的startAnimating方法来启动动画。 当然，两种方式都需要计算duration。 5. iOS 7后隐藏UITextField的光标隐藏UITextField的光标一样，就简单的一句话： 1textFiled.tintColor = [UIColor clearColor]; 通常我们用UIPickerView作为我们的UITextField的inputView时，我们是需要隐藏光标的。当然，如果想换个光标颜色，也是这么处理。 这么处理的有个遗留问题是：通常我们使用UIPickerView作为UITextField的inputView时， 并不希望去执行各种菜单操作(全选、复制、粘帖)，但只是去设置UITextField的tintColor时，我们仍然可以执行这边操作，所以需要加额外的处理。这个问题，我们可以这样处理：在textFieldShouldBeginEditing:中，我们把UITextField的userInteractionEnabled设置为NO，然后在textFieldShouldEndEditing:，将将这个值设置回来。如下： 12345678- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField &#123; textField.userInteractionEnabled = NO; return YES;&#125;- (BOOL)textFieldShouldEndEditing:(UITextField *)textField &#123; textField.userInteractionEnabled = YES; return YES;&#125; 这样就OK了。当然这只是我们当前使用的一种处理方式，还有其它的方法，直接google或者stackoverflow吧。 6. AutoreleasePoolApp启动后，苹果在主线程 RunLoop 里注册了两个 Observer，其回调都是 _wrapRunLoopWithAutoreleasePoolHandler()。 第一个 Observer 监视的事件是 Entry(即将进入Loop)，其回调内会调用 _objc_autoreleasePoolPush() 创建自动释放池。其 order 是-2147483647，优先级最高，保证创建释放池发生在其他所有回调之前。 第二个 Observer 监视了两个事件： BeforeWaiting(准备进入休眠) 时调用_objc_autoreleasePoolPop() 和 _objc_autoreleasePoolPush() 释放旧的池并创建新池；Exit(即将退出Loop) 时调用 _objc_autoreleasePoolPop() 来释放自动释放池。这个 Observer 的 order 是 2147483647，优先级最低，保证其释放池子发生在其他所有回调之后。 在主线程执行的代码，通常是写在诸如事件回调、Timer回调内的。这些回调会被 RunLoop 创建好的 AutoreleasePool 环绕着，所以不会出现内存泄漏，开发者也不必显示创建 Pool 了。","tags":[]},{"title":"iOS自动化打包","date":"2015-04-12T06:25:27.000Z","path":"2015/04/12/packaging/","text":"需要工具 Xcode SourceTree 打包分为两种情况，STG环境，PRD环境，可以根据项目进项相关配置 PS：打包时需要保证SourceTree无可提交代码并拉取最新代码。 1.使用终端进入SourceTree对应的项目文件（.xcodeproj所在的目录文件）； 2.输入如下命令： xcodebuild -workspace [POD_NAME].xcworkspace -scheme [POD_NAME] -configuration Release ps:[POD_NAME]为项目名称 如果打包成功了如下图所示： 3.复制下图中蓝色选中区域的路径： 4.执行如下命令： xcrun -sdk iphoneos -v PackageApplication 刚才复制的蓝色选中的路径 -o ~/Desktop/[POD_NAME].ipa ps:命令成功后会在桌面生成.ipa包 5.删除多余的ipa文件： 执行如下命令： rm -rf 蓝色选中的路径","tags":[]},{"title":"Private Pods","date":"2014-12-25T06:25:27.000Z","path":"2014/12/25/cocoapods/","text":"Cocoapods是非常好用的一个iOS依赖管理工具，使用它可以方便的管理和更新项目中所使用到的第三方库，以及将自己的项目中的公共组件交由它去管理。 1.创建并设置一个私有的Spec Repo。 创建完成之后在Terminal中执行如下命令: # pod repo add [REPO_NAME] [SOURCE_URL] PS：REPO_NAME为repo名称， 如果有其他合作人员共同使用这个私有Spec Repo的话在他有对应Git仓库的权限的前提下执行相同的命令添加这个Spec Repo即可。 如果删除在Terminal中执行如下命令: # pod repo remove [REPO_NAME] 2.创建Pod的所需要的项目工程文件。 $ pod lib create [POD_NAME] When you’re asked what language you want to use, answer Swift. When asked if you’d like to include a demo application, answer Yes. When determining whether to create a sample project or not, the CocoaPods team suggests asking yourself “Should this Pod include a screenshot?” If so, then it’s a good idea to include a sample project. When asked which testing framework to use, answer None. Answer No to the prompt regarding view based testing.。 3.编辑对应的podspec文件。 编辑完podspec文件后，需要验证一下这个文件是否可用，如果有任何WARNING或者ERROR都是不可以的，它就不能被添加到Spec Repo中，不过xcode的WARNING是可以存在的，验证需要执行一下命令 创建完成之后在Terminal中执行如下命令: $ pod lib lint 当出现: -&gt; [POD_NAME] (version) PodTestLibrary passed validation. ps:POD_NAME为项目工程名 时，说明验证通过了。 4.向私有的Spec Repo中提交podspec。 更新创建版本: git tag &apos;1.0.0&apos; git push --tags PS：当前的版本号必须和.podspec文件中的版本匹配 提交podspec pod repo push [REPO_NAME] [POD_NAME].podspec 5.更新维护podspec。 更新提交新版本重复实现步骤3和步骤4。","tags":[]},{"title":"常用链接","date":"2014-12-08T06:25:27.000Z","path":"2014/12/08/dataLinking/","text":"常用资料链接 https://www.coding.net/ &emsp;&emsp;&emsp;&emsp;&emsp; 码市-技术网站 http://techblog.toutiao.com/ &emsp;&emsp;&emsp; 今日头条技术博客 http://www.desgard.com/ &emsp;&emsp;&emsp;&emsp; 技术博客 http://www.jianshu.com &emsp;&emsp;&emsp;&emsp;&emsp; 简书 http://tmq.qq.com &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 技术博客 https://gold.xitu.io/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 掘金-技术社区 https://github.com &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; github http://www.cocoachina.com / &emsp;&emsp; cocoachina-技术社区 https://cocoapods.org/ &emsp;&emsp;&emsp;&emsp;&emsp; cocoapod官网 https://git.oschina.net/ &emsp;&emsp;&emsp;&emsp;&emsp; 码云 http://www.csdn.net/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp; CSDN-技术论坛 https://www.cnblogs.com/ &emsp;&emsp;&emsp; 博客园-技术社区 http://www.code4app.com/ &emsp;&emsp;&emsp; Code4App http://www.oschina.net &emsp;&emsp;&emsp;&emsp;&emsp; 开源中国 https://www.yinxiang.com/ &emsp;&emsp;&emsp; 印象笔记 https://fir.im/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; fir https://shimo.im/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 石墨 http://stackoverflow.com/ &emsp;&emsp;&emsp;&emsp; 技术网站 http://www.runoob.com/ &emsp;&emsp;&emsp;&emsp; 技术网站 http://blog.sina.com.cn &emsp;&emsp;&emsp;&emsp; &emsp; 新浪博客 http://jspatch.com/ &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; jspatch http://mp.weixin.qq.com &emsp;&emsp;&emsp;&emsp; 微信公众平台","tags":[]},{"title":"CocoaPods安装","date":"2014-11-17T12:15:27.000Z","path":"2014/11/17/cocoapodsInstall/","text":"1.安装RubyCocoaPods基于Ruby语言开发而成，因此安装CocoaPods前需要安装Ruby环境。Mac系统默认自带Ruby环境，如果没有请自行查找安装。检测是否安装Ruby： gem -v 安装则会提示当前Ruby版本。gem介绍：gem是一个管理Ruby库和程序的标准包，它通过Ruby Gem（如 http://rubygems.org/ ）源来查找、安装、升级和卸载软件包，非常的便捷。 2.更换gem源因为国内网络的问题导致gem源间歇性中断。因此我们需要更换gem源，使用https://gems.ruby-china.org/ 第一步：移动默认的源 gem sources –remove https://rubygems.org/ 第二步：指定源 gem sources -a https://gems.ruby-china.org/ 第三步：查看指定的源 gem sources -l *** CURRENT SOURCES *** 如果是https://gems.ruby-china.org/ 则更换成功。 3.设置gem为最新版本如果gem太老，可以尝试用如下命令升级gem： 在Terminal输入以下命令： sudo gem update --system 升级成功后会提示: Latest version currently installed. Aborting. 4.执行安装CocoaPods命令注意：OS X 10.11 升级，虽然官方声称只是一个小的升级，但对于开发者而言，cocoapods需要重新安装，但按照以前的安装方式，在Terminal输入以下命令： sudo gem install cocoa pods 如果报以下错误： ERROR: While executing gem ... (Errno::EPERM) Operation not permitted - /usr/bin/xcodeproj 在Terminal输入以下命令： sudo gem install -n /usr/local/bin cocoa pods pod setup 还有一点需要注意，pod setup在执行时，会输出Setting up CocoaPods master repo，但是会等待比较久的时间。这步其实是 Cocoapods 在将它的信息下载到 ~/.cocoapods目录下，如果你等太久，可以试着 cd 到那个目录，用du -sh *来查看下载进度。 5.查看版本号 pod –version","tags":[]}]